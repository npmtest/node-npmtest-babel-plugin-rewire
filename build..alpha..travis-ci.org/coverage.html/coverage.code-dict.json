{"/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/test.js":"/* istanbul instrument in package npmtest_babel_plugin_rewire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/lib.npmtest_babel_plugin_rewire.js":"/* istanbul instrument in package npmtest_babel_plugin_rewire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_babel_plugin_rewire = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_babel_plugin_rewire = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-babel-plugin-rewire && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_babel_plugin_rewire */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_babel_plugin_rewire\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_babel_plugin_rewire.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_babel_plugin_rewire.rollup.js'] =\n            local.assetsDict['/assets.npmtest_babel_plugin_rewire.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_babel_plugin_rewire.__dirname + '/lib.npmtest_babel_plugin_rewire.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/node_modules/babel-plugin-rewire/lib/babel-plugin-rewire.js":"'use strict';\n\nvar _RewireState = require('./RewireState.js');\n\nvar _RewireState2 = _interopRequireDefault(_RewireState);\n\nvar _RewireHelpers = require('./RewireHelpers.js');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*Copyright (c) 2015, Robert Binna <r.binna@synedra.com>\n\n Permission to use, copy, modify, and/or distribute this software for any\n purpose with or without fee is hereby granted, provided that the above\n copyright notice and this permission notice appear in all copies.\n\n THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.*/\n\nmodule.exports = function (_ref) {\n\tvar t = _ref.types;\n\n\tfunction isRewireable(path, variableBinding) {\n\t\tvar node = path.node;\n\t\tvar parent = path.parent;\n\n\n\t\treturn variableBinding.referencePaths !== null && !(parent.type === 'VariableDeclarator' && parent.id == node) && !(parent.type === 'ForInStatement' && parent.left == node) && !(parent.type === 'FunctionExpression' && parent.id === node) && !(parent.type === 'MemberExpression' && parent.property === node) && !(parent.type === 'ObjectProperty' && parent.key === node) && !(parent.type === 'ObjectMethod' && parent.key === node) && !(parent.type === 'ObjectProperty' && path.parentPath && path.parentPath.parent && path.parentPath.parent.type === 'ObjectPattern') && !(parent.type === 'ExportSpecifier') && !(parent.type === 'ImportSpecifier') && !(parent.type === 'ObjectTypeProperty') && !(parent.type === 'ClassMethod');\n\t}\n\n\tfunction doesIdentifierRepresentAValidReference(path, variableBinding, rewireInformation) {\n\t\tvar isIgnoredVariable = rewireInformation.ignoredIdentifiers.indexOf(path.node.name) !== -1;\n\t\treturn !isIgnoredVariable && variableBinding !== undefined && !(0, _RewireHelpers.wasProcessed)(path) && variableBinding.scope.block.type === 'Program';\n\t}\n\n\tfunction getVariableNameAndBinding(path) {\n\t\tvar node = path.node;\n\t\tvar parent = path.parent;\n\t\tvar scope = path.scope;\n\n\t\tvar variableName = node.name;\n\t\tvar variableBinding = !t.isFlow || !t.isFlow(node) && !t.isFlow(parent) ? scope.getBinding(variableName) : undefined;\n\n\t\treturn {\n\t\t\tvariableName: variableName,\n\t\t\tvariableBinding: variableBinding\n\t\t};\n\t}\n\n\tvar BodyVisitor = {\n\t\tIdentifier: function Identifier(path, rewireInformation) {\n\t\t\tvar node = path.node;\n\t\t\tvar parent = path.parent;\n\t\t\tvar scope = path.scope;\n\n\t\t\tvar _getVariableNameAndBi = getVariableNameAndBinding(path);\n\n\t\t\tvar variableName = _getVariableNameAndBi.variableName;\n\t\t\tvar variableBinding = _getVariableNameAndBi.variableBinding;\n\n\t\t\t//Matches for body\n\n\t\t\tif (doesIdentifierRepresentAValidReference(path, variableBinding, rewireInformation)) {\n\t\t\t\tvar isWildCardImport = variableBinding.path.type === 'ImportNamespaceSpecifier';\n\t\t\t\tif (isRewireable(path, variableBinding) && (0, _RewireHelpers.contains)(variableBinding.referencePaths, path)) {\n\t\t\t\t\tif (parent.type === 'UpdateExpression') {\n\t\t\t\t\t\trewireInformation.addUpdateableVariable(variableName);\n\t\t\t\t\t\tpath.parentPath.replaceWith(t.callExpression(rewireInformation.getUpdateOperationID(), [t.stringLiteral(parent.operator), t.stringLiteral(variableName), t.booleanLiteral(parent.prefix)]));\n\t\t\t\t\t} else {\n\t\t\t\t\t\trewireInformation.ensureAccessor(variableName, isWildCardImport);\n\t\t\t\t\t\tpath.replaceWith(t.callExpression(rewireInformation.getUniversalGetterID(), [t.stringLiteral(variableName)]));\n\t\t\t\t\t}\n\t\t\t\t} else if (parent.type === 'AssignmentExpression' && parent.left == node) {\n\t\t\t\t\trewireInformation.addUpdateableVariable(variableName);\n\n\t\t\t\t\tif (parent.operator === '=') {\n\t\t\t\t\t\tpath.parentPath.replaceWith((0, _RewireHelpers.noRewire)(t.callExpression(rewireInformation.getAssignmentOperationID(), [t.stringLiteral(variableName), parent.right])));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar baseOperator = parent.operator.substring(0, parent.operator.length - 1);\n\t\t\t\t\t\tpath.parentPath.replaceWith(t.assignmentExpression('=', parent.left, t.binaryExpression(baseOperator, t.callExpression(rewireInformation.getUniversalGetterID(), [t.stringLiteral(variableName)]), parent.right)));\n\t\t\t\t\t}\n\t\t\t\t\t//TODO variable bindings add accessor for each variable declaration even if its unused. The reason is that any other plugin could potentially change the code otherwise\n\t\t\t\t}\n\n\t\t\t\tif (variableBinding.identifier === node) {\n\t\t\t\t\trewireInformation.addTrackedIdentifier(variableName, isWildCardImport);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t'ExportNamedDeclaration|ExportAllDeclaration': function ExportNamedDeclarationExportAllDeclaration(_ref2, rewireInformation) {\n\t\t\tvar _ref2$node$specifiers = _ref2.node.specifiers;\n\t\t\tvar specifiers = _ref2$node$specifiers === undefined ? [] : _ref2$node$specifiers;\n\n\t\t\tvar hasDefaultExport = specifiers.some(function (specifier) {\n\t\t\t\treturn specifier.local && specifier.local.name === 'default' || specifier.exported && specifier.exported.name === 'default';\n\t\t\t});\n\t\t\trewireInformation.hasES6DefaultExport = rewireInformation.hasES6DefaultExport || hasDefaultExport;\n\t\t\trewireInformation.isES6Module = true;\n\t\t},\n\n\t\tAssignmentExpression: function AssignmentExpression(_ref3, rewireInformation) {\n\t\t\tvar assignmentExpression = _ref3.node;\n\t\t\tvar blockType = _ref3.scope.block.type;\n\n\t\t\trewireInformation.hasCommonJSExport = blockType === 'Program' && !!assignmentExpression.left.object && assignmentExpression.left.object.name === 'module' && !!assignmentExpression.left.property && assignmentExpression.left.property.name === 'exports';\n\t\t},\n\n\t\tExportDefaultDeclaration: function ExportDefaultDeclaration(path, rewireInformation) {\n\t\t\tif (!(0, _RewireHelpers.wasProcessed)(path)) {\n\t\t\t\t(function () {\n\t\t\t\t\tvar exportIdentifier = null;\n\t\t\t\t\trewireInformation.hasES6DefaultExport = true;\n\t\t\t\t\trewireInformation.hasES6Export = true;\n\t\t\t\t\trewireInformation.isES6Module = true;\n\n\t\t\t\t\tvar declarationVisitors = {\n\t\t\t\t\t\tClassDeclaration: function ClassDeclaration(path, rewireInformation) {\n\t\t\t\t\t\t\tvar existingClassDeclaration = path.node;\n\t\t\t\t\t\t\tvar parent = path.parent;\n\t\t\t\t\t\t\tvar scope = path.scope;\n\n\t\t\t\t\t\t\tif (existingClassDeclaration.id === null && parent.type === 'ExportDefaultDeclaration') {\n\t\t\t\t\t\t\t\texportIdentifier = scope.generateUidIdentifier(\"DefaultExportValue\");\n\t\t\t\t\t\t\t\tpath.replaceWith(t.classDeclaration(exportIdentifier, existingClassDeclaration.superClass, existingClassDeclaration.body, existingClassDeclaration.decorators || []));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\texportIdentifier = existingClassDeclaration.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tFunctionDeclaration: function FunctionDeclaration(path, rewireInformation) {\n\t\t\t\t\t\t\tvar existingFunctionDeclaration = path.node;\n\t\t\t\t\t\t\tvar scope = path.scope;\n\n\t\t\t\t\t\t\tif (existingFunctionDeclaration.id === null && path.parent.type === 'ExportDefaultDeclaration') {\n\t\t\t\t\t\t\t\texportIdentifier = scope.generateUidIdentifier(\"DefaultExportValue\");\n\t\t\t\t\t\t\t\tpath.replaceWith(t.functionDeclaration(exportIdentifier, existingFunctionDeclaration.params, existingFunctionDeclaration.body, existingFunctionDeclaration.generator, existingFunctionDeclaration.async));\n\t\t\t\t\t\t\t} else if (path.parent.type === 'ExportDefaultDeclaration') {\n\t\t\t\t\t\t\t\texportIdentifier = existingFunctionDeclaration.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tIdentifier: function Identifier(_ref4, rewireInformation) {\n\t\t\t\t\t\t\tvar parentType = _ref4.parent.type;\n\t\t\t\t\t\t\tvar identifier = _ref4.node;\n\n\t\t\t\t\t\t\tif (parentType === 'ExportDefaultDeclaration') {\n\t\t\t\t\t\t\t\texportIdentifier = identifier;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tpath.traverse(declarationVisitors, rewireInformation);\n\t\t\t\t\tif (exportIdentifier === null) {\n\t\t\t\t\t\texportIdentifier = (0, _RewireHelpers.noRewire)(path.scope.generateUidIdentifier(\"DefaultExportValue\"));\n\t\t\t\t\t\tpath.replaceWithMultiple([t.variableDeclaration('let', [t.variableDeclarator(exportIdentifier, path.node.declaration)]), (0, _RewireHelpers.noRewire)(t.exportDefaultDeclaration(exportIdentifier))]);\n\t\t\t\t\t}\n\t\t\t\t\trewireInformation.enrichExport(exportIdentifier);\n\t\t\t\t})();\n\t\t\t}\n\t\t},\n\n\t\tImportDeclaration: function ImportDeclaration(path, rewireInformation) {\n\t\t\trewireInformation.isES6Module = true;\n\t\t}\n\t};\n\n\tvar BodySecondPassVisitor = {\n\t\tIdentifier: function Identifier(path, rewireInformation) {\n\t\t\tvar node = path.node;\n\t\t\tvar parent = path.parent;\n\n\t\t\tvar _getVariableNameAndBi2 = getVariableNameAndBinding(path);\n\n\t\t\tvar variableName = _getVariableNameAndBi2.variableName;\n\t\t\tvar variableBinding = _getVariableNameAndBi2.variableBinding;\n\n\t\t\t//Matches for body\n\n\t\t\tif (doesIdentifierRepresentAValidReference(path, variableBinding, rewireInformation) && isRewireable(path, variableBinding) && rewireInformation.hasTrackedIdentifier(variableName) && variableBinding.identifier !== node && parent.type !== 'UpdateExpression') {\n\t\t\t\tvar isWildCardImport = variableBinding.path.type === 'ImportNamespaceSpecifier';\n\t\t\t\trewireInformation.ensureAccessor(variableName, isWildCardImport);\n\t\t\t\tpath.replaceWith(t.callExpression(rewireInformation.getUniversalGetterID(), [t.stringLiteral(variableName)]));\n\t\t\t}\n\t\t}\n\t};\n\n\tvar ProgramVisitor = {\n\t\tProgram: {\n\t\t\tenter: function enter(path, state) {\n\t\t\t\tif (!(0, _RewireHelpers.wasProcessed)(path)) {\n\t\t\t\t\tvar rewireState = new _RewireState2.default(path.scope);\n\t\t\t\t\trewireState.setIgnoredIdentifiers(state.opts.ignoredIdentifiers);\n\n\t\t\t\t\tpath.traverse(BodyVisitor, rewireState);\n\n\t\t\t\t\tstate.rewireState = rewireState;\n\t\t\t\t}\n\t\t\t},\n\t\t\texit: function exit(path, state) {\n\t\t\t\tif (!(0, _RewireHelpers.wasProcessed)(path)) {\n\t\t\t\t\tvar scope = path.scope;\n\t\t\t\t\tvar program = path.node;\n\n\t\t\t\t\tvar rewireState = state.rewireState;\n\t\t\t\t\tpath.traverse(BodySecondPassVisitor, rewireState);\n\t\t\t\t\tif (rewireState.containsDependenciesToRewire()) {\n\t\t\t\t\t\trewireState.prependUniversalAccessors(scope);\n\t\t\t\t\t\trewireState.appendExports();\n\n\t\t\t\t\t\tpath.replaceWith((0, _RewireHelpers.noRewire)(t.Program(program.body.concat(rewireState.nodesToAppendToProgramBody), program.directives)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\treturn {\n\t\tvisitor: ProgramVisitor\n\t};\n};","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/node_modules/babel-plugin-rewire/lib/RewireState.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*Copyright (c) 2015, Robert Binna <r.binna@synedra.com>\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \nermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nnnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nnnn\nvar _Templates = require('./Templates.js');\n\nvar _RewireHelpers = require('./RewireHelpers.js');\n\nvar _babelTypes = require('babel-types');\n\nvar t = _interopRequireWildcard(_babelTypes);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RewireState = function () {\n\tfunction RewireState(scope) {\n\t\t_classCallCheck(this, RewireState);\n\n\t\tthis.isES6Module = false;\n\t\tthis.hasES6Export = false;\n\t\tthis.hasES6DefaultExport = false;\n\t\tthis.nodesToAppendToProgramBody = [];\n\t\tthis.hasCommonJSExport = false;\n\t\tthis.accessors = {};\n\t\tthis.trackedIdentfiers = {};\n\t\tthis.isWildcardImport = {};\n\t\tthis.ignoredIdentifiers = [];\n\t\tthis.updateableVariables = {};\n\t\tthis.getGlobalVariableHandleIdentifier = scope.generateUidIdentifier('getGlobalObject');\n\t\tthis.getRewiredDataIdentifier = scope.generateUidIdentifier('__getRewiredData__');\n\t\tthis.getRewireRegistryIdentifier = scope.generateUidIdentifier('__getRewireRegistry__');\n\t\tthis.getUniqueGlobalModuleIdIdentifier = scope.generateUidIdentifier('__getRewireModuleId__');\n\t\tthis.uniqueModuleIdIdentifier = scope.generateUidIdentifier('__RewireModuleId__');\n\t\tthis.originalVariableAccessorIdentifier = scope.generateUidIdentifier('__get_original__');\n\t\tthis.originalVariableSetterIdentifier = scope.generateUidIdentifier('__set_original__');\n\t\tthis.updateOperationIdentifier = scope.generateUidIdentifier('__update_operation__');\n\t\tthis.assignmentOperationIdentifier = scope.generateUidIdentifier('__assign__');\n\t\tthis.typeofOriginalExportVariable = scope.generateUidIdentifier('typeOfOriginalExport');\n\n\t\tthis.universalAccessors = {\n\t\t\t__get__: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__get__')),\n\t\t\t__set__: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__set__')),\n\t\t\t__reset__: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__reset__')),\n\t\t\t__with__: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__with__')),\n\t\t\t__RewireAPI__: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__RewireAPI__')),\n\t\t\t__assignOperation: (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__assign__'))\n\t\t};\n\t}\n\n\t_createClass(RewireState, [{\n\t\tkey: 'appendToProgramBody',\n\t\tvalue: function appendToProgramBody(nodes) {\n\t\t\tif (!Array.isArray(nodes)) {\n\t\t\t\tnodes = [nodes];\n\t\t\t}\n\t\t\tthis.nodesToAppendToProgramBody = this.nodesToAppendToProgramBody.concat(nodes);\n\t\t}\n\t}, {\n\t\tkey: 'prependToProgramBody',\n\t\tvalue: function prependToProgramBody(nodes) {\n\t\t\tif (!Array.isArray(nodes)) {\n\t\t\t\tnodes = [nodes];\n\t\t\t}\n\t\t\tthis.nodesToAppendToProgramBody = nodes.concat(this.nodesToAppendToProgramBody);\n\t\t}\n\t}, {\n\t\tkey: 'ensureAccessor',\n\t\tvalue: function ensureAccessor(variableName) {\n\t\t\tvar isWildcardImport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tif (!this.accessors[variableName]) {\n\t\t\t\tthis.accessors[variableName] = true;\n\t\t\t\tthis.addTrackedIdentifier(variableName, isWildcardImport);\n\t\t\t}\n\n\t\t\treturn this.accessors[variableName];\n\t\t}\n\t}, {\n\t\tkey: 'addTrackedIdentifier',\n\t\tvalue: function addTrackedIdentifier(variableName) {\n\t\t\tvar isWildcardImport = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n\t\t\tthis.isWildcardImport[variableName] = isWildcardImport;\n\t\t\treturn this.trackedIdentfiers[variableName] = true;\n\t\t}\n\t}, {\n\t\tkey: 'hasTrackedIdentifier',\n\t\tvalue: function hasTrackedIdentifier(variableName) {\n\t\t\treturn !!this.trackedIdentfiers[variableName];\n\t\t}\n\t}, {\n\t\tkey: 'addUpdateableVariable',\n\t\tvalue: function addUpdateableVariable(variableName) {\n\t\t\tthis.updateableVariables[variableName] = true;\n\t\t\tthis.ensureAccessor(variableName);\n\t\t}\n\t}, {\n\t\tkey: 'setIgnoredIdentifiers',\n\t\tvalue: function setIgnoredIdentifiers(ignoredIdentifiers) {\n\t\t\tthis.ignoredIdentifiers = ignoredIdentifiers || [];\n\t\t}\n\t}, {\n\t\tkey: 'prependUniversalAccessors',\n\t\tvalue: function prependUniversalAccessors(scope) {\n\t\t\tvar hasWildcardImport = Object.keys(this.isWildcardImport).some(function (propertyName) {\n\t\t\t\treturn this.isWildcardImport[propertyName];\n\t\t\t}.bind(this));\n\t\t\tvar filterWildcardImportIdentifier = hasWildcardImport && (0, _RewireHelpers.noRewire)(scope.generateUidIdentifier('__filterWildcardImport__')) || null;\n\n\t\t\tvar originalAccessor = t.functionDeclaration(this.originalVariableAccessorIdentifier, [t.identifier('variableName')], t.blockStatement([t.switchStatement(t.identifier('variableName'), Object.keys(this.accessors).map(function (identifierName) {\n\t\t\t\tvar accessOriginalVariable = (0, _RewireHelpers.noRewire)(t.identifier(identifierName));\n\n\t\t\t\tif (this.isWildcardImport[identifierName]) {\n\t\t\t\t\taccessOriginalVariable = t.callExpression(filterWildcardImportIdentifier, [accessOriginalVariable]);\n\t\t\t\t}\n\n\t\t\t\treturn t.switchCase(t.stringLiteral(identifierName), [t.returnStatement(accessOriginalVariable)]);\n\t\t\t}, this)), t.returnStatement((0, _RewireHelpers.noRewire)(t.identifier('undefined')))]));\n\n\t\t\tvar valueVariable = scope.generateUidIdentifier('value');\n\t\t\tvar originalSetter = t.functionDeclaration(this.originalVariableSetterIdentifier, [t.identifier('variableName'), valueVariable], t.blockStatement([t.switchStatement(t.identifier('variableName'), Object.keys(this.updateableVariables).map(function (identifierName) {\n\t\t\t\treturn t.switchCase(t.stringLiteral(identifierName), [t.returnStatement(t.assignmentExpression('=', (0, _RewireHelpers.noRewire)(t.identifier(identifierName)), valueVariable))]);\n\t\t\t})), t.returnStatement((0, _RewireHelpers.noRewire)(t.identifier('undefined')))]));\n\n\t\t\tthis.prependToProgramBody((0, _Templates.universalAccesorsTemplate)({\n\t\t\t\tORIGINAL_VARIABLE_ACCESSOR_IDENTIFIER: this.originalVariableAccessorIdentifier,\n\t\t\t\tORIGINAL_VARIABLE_SETTER_IDENTIFIER: this.originalVariableSetterIdentifier,\n\t\t\t\tASSIGNMENT_OPERATION_IDENTIFIER: this.assignmentOperationIdentifier,\n\t\t\t\tUPDATE_OPERATION_IDENTIFIER: this.updateOperationIdentifier,\n\t\t\t\tORIGINAL_ACCESSOR: originalAccessor,\n\t\t\t\tORIGINAL_SETTER: originalSetter,\n\t\t\t\tUNIVERSAL_GETTER_ID: this.getUniversalGetterID(),\n\t\t\t\tUNIVERSAL_SETTER_ID: this.getUniversalSetterID(),\n\t\t\t\tUNIVERSAL_RESETTER_ID: this.getUniversalResetterID(),\n\t\t\t\tUNIVERSAL_WITH_ID: this.getUniversalWithID(),\n\t\t\t\tAPI_OBJECT_ID: this.getAPIObjectID(),\n\t\t\t\tGET_GLOBAL_VARIABLE_HANDLE_IDENTIFIER: this.getGlobalVariableHandleIdentifier,\n\t\t\t\tGET_REWIRE_DATA_IDENTIFIER: this.getRewiredDataIdentifier,\n\t\t\t\tGET_UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER: this.getUniqueGlobalModuleIdIdentifier,\n\t\t\t\tGET_REWIRE_REGISTRY_IDENTIFIER: this.getRewireRegistryIdentifier,\n\t\t\t\tUNIQUE_GLOBAL_MODULE_ID_IDENTIFIER: this.uniqueModuleIdIdentifier\n\t\t\t}));\n\n\t\t\tif (hasWildcardImport) {\n\t\t\t\tthis.appendToProgramBody((0, _Templates.filterWildcardImportTemplate)({\n\t\t\t\t\tFILTER_WILDCARD_IMPORT_IDENTIFIER: filterWildcardImportIdentifier\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'appendExports',\n\t\tvalue: function appendExports() {\n\t\t\tif (this.isES6Module && (!this.hasCommonJSExport || this.hasES6Export)) {\n\t\t\t\tthis.appendToProgramBody(this.generateNamedExports());\n\n\t\t\t\tif (!this.hasES6DefaultExport) {\n\t\t\t\t\tthis.appendToProgramBody(t.exportDefaultDeclaration(this.getAPIObjectID()));\n\t\t\t\t}\n\t\t\t} else if (!this.isES6Module || !this.hasES6Export && this.hasCommonJSExport) {\n\t\t\t\tvar commonJSExport = t.memberExpression(t.identifier('module'), t.identifier('exports'), false);\n\t\t\t\tthis.enrichExport(commonJSExport);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'enrichExport',\n\t\tvalue: function enrichExport(exportValue) {\n\t\t\tthis.appendToProgramBody((0, _Templates.enrichExportTemplate)({\n\t\t\t\tTYPEOFORIGINALEXPORTVARIABLE: this.getTypeOfOriginalExportVariable(),\n\t\t\t\tUNIVERSAL_GETTER_ID: this.getUniversalGetterID(),\n\t\t\t\tUNIVERSAL_SETTER_ID: this.getUniversalSetterID(),\n\t\t\t\tUNIVERSAL_RESETTER_ID: this.getUniversalResetterID(),\n\t\t\t\tUNIVERSAL_WITH_ID: this.getUniversalWithID(),\n\t\t\t\tAPI_OBJECT_ID: this.getAPIObjectID(),\n\t\t\t\tEXPORT_VALUE: exportValue\n\t\t\t}));\n\t\t}\n\t}, {\n\t\tkey: 'generateNamedExports',\n\t\tvalue: function generateNamedExports() {\n\t\t\treturn t.exportNamedDeclaration(null, [t.exportSpecifier(this.getUniversalGetterID(), t.identifier('__get__')), t.exportSpecifier(this.getUniversalGetterID(), t.identifier('__GetDependency__')), t.exportSpecifier(this.getUniversalSetterID(), t.identifier('__Rewire__')), t.exportSpecifier(this.getUniversalSetterID(), t.identifier('__set__')), t.exportSpecifier(this.getUniversalResetterID(), t.identifier('__ResetDependency__')), t.exportSpecifier(this.getAPIObjectID(), t.identifier('__RewireAPI__'))]);\n\t\t}\n\t}, {\n\t\tkey: 'containsDependenciesToRewire',\n\t\tvalue: function containsDependenciesToRewire() {\n\t\t\treturn Object.keys(this.accessors).length > 0 || Object.keys(this.updateableVariables).length > 0;\n\t\t}\n\t}, {\n\t\tkey: 'getUniversalGetterID',\n\t\tvalue: function getUniversalGetterID() {\n\t\t\treturn this.universalAccessors['__get__'];\n\t\t}\n\t}, {\n\t\tkey: 'getUpdateOperationID',\n\t\tvalue: function getUpdateOperationID() {\n\t\t\treturn this.updateOperationIdentifier;\n\t\t}\n\t}, {\n\t\tkey: 'getAssignmentOperationID',\n\t\tvalue: function getAssignmentOperationID() {\n\t\t\treturn this.assignmentOperationIdentifier;\n\t\t}\n\t}, {\n\t\tkey: 'getUniversalSetterID',\n\t\tvalue: function getUniversalSetterID() {\n\t\t\treturn this.universalAccessors['__set__'];\n\t\t}\n\t}, {\n\t\tkey: 'getUniversalResetterID',\n\t\tvalue: function getUniversalResetterID() {\n\t\t\treturn this.universalAccessors['__reset__'];\n\t\t}\n\t}, {\n\t\tkey: 'getUniversalWithID',\n\t\tvalue: function getUniversalWithID() {\n\t\t\treturn this.universalAccessors['__with__'];\n\t\t}\n\t}, {\n\t\tkey: 'getAPIObjectID',\n\t\tvalue: function getAPIObjectID() {\n\t\t\treturn this.universalAccessors['__RewireAPI__'];\n\t\t}\n\t}, {\n\t\tkey: 'getTypeOfOriginalExportVariable',\n\t\tvalue: function getTypeOfOriginalExportVariable() {\n\t\t\treturn this.typeofOriginalExportVariable;\n\t\t}\n\t}]);\n\n\treturn RewireState;\n}();\n\nexports.default = RewireState;\n;","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/node_modules/babel-plugin-rewire/lib/Templates.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.filterWildcardImportTemplate = exports.enrichExportTemplate = exports.universalAccesorsTemplate = undefined;\n\nvar _babelTemplate = require('babel-template');\n\nvar _babelTemplate2 = _interopRequireDefault(_babelTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar universalAccesorsTemplate = exports.universalAccesorsTemplate = (0, _babelTemplate2.default)('\\nfunction GET_GLOBAL_VARIABLE_HANDLE_IDENTIFIER() {\\n\\ttry {\\n\\t\\t\\tif(!!global) {\\n\\t\\t\\t\\t\\treturn global;\\n\\t\\t\\t}\\n\\t} catch(e) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tif(!!window) {\\n\\t\\t\\t\\t\\t\\t\\treturn window;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t} catch(e) {\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t}\\n\\t}\\n};\\n\\nvar UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER = null;\\nfunction GET_UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER() {\\n\\tif(UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER === null) {\\n\\t\\tlet globalVariable = GET_GLOBAL_VARIABLE_HANDLE_IDENTIFIER();\\n\\t\\tif(!globalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__) {\\n\\t\\t\\tglobalVariable.__$$GLOBAL_REWIRE_NEXT_MODULE_ID__ = 0;\\n\\t\\t}\\n\\t\\tUNIQUE_GLOBAL_MODULE_ID_IDENTIFIER = __$$GLOBAL_REWIRE_NEXT_MODULE_ID__++;\\n\\t}\\n\\treturn UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER;\\n}\\n\\nfunction GET_REWIRE_REGISTRY_IDENTIFIER() {\\n\\tlet theGlobalVariable = GET_GLOBAL_VARIABLE_HANDLE_IDENTIFIER();\\n\\tif(!theGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__) {\\n\\t\\ttheGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\\n\\t}\\n\\treturn __$$GLOBAL_REWIRE_REGISTRY__; \\n}\\n\\nfunction GET_REWIRE_DATA_IDENTIFIER() {\\n\\tlet moduleId = GET_UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER();\\n\\tlet registry = GET_REWIRE_REGISTRY_IDENTIFIER();\\n\\tlet rewireData = registry[moduleId];\\n\\tif(!rewireData) {\\n\\t\\tregistry[moduleId] = Object.create(null);\\n\\t\\trewireData = registry[moduleId];\\n\\t}\\n\\treturn rewireData;\\n}\\n\\n(function registerResetAll() {\\n\\tlet theGlobalVariable = GET_GLOBAL_VARIABLE_HANDLE_IDENTIFIER();\\n\\tif(!theGlobalVariable[\\'__rewire_reset_all__\\']) {\\n\\t\\ttheGlobalVariable[\\'__rewire_reset_all__\\'] = function() {\\n\\t\\t\\ttheGlobalVariable.__$$GLOBAL_REWIRE_REGISTRY__ = Object.create(null);\\n\\t\\t};\\n\\t}\\n})();\\n\\nvar INTENTIONAL_UNDEFINED = \\'__INTENTIONAL_UNDEFINED__\\';\\n\\nlet API_OBJECT_ID = {};\\n\\n(function() {\\n\\tfunction addPropertyToAPIObject(name, value) {\\n\\t\\tObject.defineProperty(API_OBJECT_ID, name, { value: value, enumerable: false, configurable: true });\\n\\t}\\n\\n\\taddPropertyToAPIObject(\\'__get__\\', UNIVERSAL_GETTER_ID);\\n\\taddPropertyToAPIObject(\\'__GetDependency__\\', UNIVERSAL_GETTER_ID);\\n\\taddPropertyToAPIObject(\\'__Rewire__\\', UNIVERSAL_SETTER_ID);\\n\\taddPropertyToAPIObject(\\'__set__\\', UNIVERSAL_SETTER_ID);\\n\\taddPropertyToAPIObject(\\'__reset__\\', UNIVERSAL_RESETTER_ID);\\n\\taddPropertyToAPIObject(\\'__ResetDependency__\\', UNIVERSAL_RESETTER_ID);\\n\\taddPropertyToAPIObject(\\'__with__\\', UNIVERSAL_WITH_ID);\\n})();\\n\\nfunction UNIVERSAL_GETTER_ID(variableName) {\\n\\tlet rewireData = GET_REWIRE_DATA_IDENTIFIER();\\n  if (rewireData[variableName] === undefined) {\\n    return ORIGINAL_VARIABLE_ACCESSOR_IDENTIFIER(variableName);\\n  } else {\\n    var value = rewireData[variableName];\\n    if (value === INTENTIONAL_UNDEFINED) {\\n      return undefined;\\n    } else {\\n      return value;\\n    }\\n  }\\n}\\n\\nORIGINAL_ACCESSOR\\n\\nfunction ASSIGNMENT_OPERATION_IDENTIFIER(variableName, value) {\\n\\tlet rewireData = GET_REWIRE_DATA_IDENTIFIER();\\n\\tif(rewireData[variableName] === undefined) {\\n\\t\\treturn ORIGINAL_VARIABLE_SETTER_IDENTIFIER(variableName, value);\\n\\t} else {\\n\\t\\treturn rewireData[variableName] = value;\\n\\t}\\n}\\n\\nORIGINAL_SETTER;\\n\\nfunction UPDATE_OPERATION_IDENTIFIER(operation, variableName, prefix) {\\n\\tvar oldValue = UNIVERSAL_GETTER_ID(variableName);\\n\\tvar newValue = (operation === \\'++\\') ? oldValue + 1 : oldValue - 1;\\n\\tASSIGNMENT_OPERATION_IDENTIFIER(variableName, newValue);\\n\\treturn (prefix) ? newValue : oldValue;\\n}\\n\\nfunction UNIVERSAL_SETTER_ID(variableName, value) {\\n\\tlet rewireData = GET_REWIRE_DATA_IDENTIFIER();\\n\\tif(typeof variableName === \\'object\\') {\\n\\t\\tObject.keys(variableName).forEach(function(name) {\\n\\t\\t\\trewireData[name] = variableName[name];\\n\\t\\t});\\n\\t} else {\\n\\t    if (value === undefined) {\\n\\t      rewireData[variableName] = INTENTIONAL_UNDEFINED\\n\\t    } else {\\n\\t      rewireData[variableName] = value\\n\\t    }\\n\\n        return function() {\\n            UNIVERSAL_RESETTER_ID(variableName);\\n        };\\n\\t}\\n}\\n\\nfunction UNIVERSAL_RESETTER_ID(variableName) {\\n\\tlet rewireData = GET_REWIRE_DATA_IDENTIFIER();\\n\\tdelete rewireData[variableName];\\n\\tif(Object.keys(rewireData).length == 0) {\\n\\t\\tdelete GET_REWIRE_REGISTRY_IDENTIFIER()[GET_UNIQUE_GLOBAL_MODULE_ID_IDENTIFIER];\\n\\t};\\n}\\n\\nfunction UNIVERSAL_WITH_ID(object) {\\n\\tlet rewireData = GET_REWIRE_DATA_IDENTIFIER();\\n\\tvar rewiredVariableNames = Object.keys(object);\\n\\tvar previousValues = {};\\n\\n\\tfunction reset() {\\n\\t\\trewiredVariableNames.forEach(function(variableName) {\\n\\t\\t\\trewireData[variableName] = previousValues[variableName];\\n\\t\\t});\\n\\t}\\n\\n\\treturn function(callback) {\\n\\t\\trewiredVariableNames.forEach(function(variableName) {\\n\\t\\t\\tpreviousValues[variableName] = rewireData[variableName];\\n\\t\\t\\trewireData[variableName] = object[variableName];\\n\\t\\t});\\n\\t\\tlet result = callback();\\n\\t\\tif(!!result && typeof result.then == \\'function\\') {\\n\\t\\t\\tresult.then(reset).catch(reset);\\n\\t\\t} else {\\n\\t\\t\\treset();\\n\\t\\t}\\n\\t\\treturn result;\\n\\t}\\n}\\n\\n\\n'); /*Copyright (c) 2015, Robert Binna <r.binna@synedra.com>\nnermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nnnnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nnn\nvar enrichExportTemplate = exports.enrichExportTemplate = (0, _babelTemplate2.default)('\\nlet TYPEOFORIGINALEXPORTVARIABLE = typeof EXPORT_VALUE;\\nfunction addNonEnumerableProperty(name, value) {\\n\\tObject.defineProperty(EXPORT_VALUE, name, { value: value, enumerable: false, configurable: true });\\n}\\n\\nif((TYPEOFORIGINALEXPORTVARIABLE === \\'object\\' || TYPEOFORIGINALEXPORTVARIABLE === \\'function\\') && Object.isExtensible(EXPORT_VALUE)) {\\n\\taddNonEnumerableProperty(\\'__get__\\', UNIVERSAL_GETTER_ID);\\n\\taddNonEnumerableProperty(\\'__GetDependency__\\', UNIVERSAL_GETTER_ID);\\n\\taddNonEnumerableProperty(\\'__Rewire__\\', UNIVERSAL_SETTER_ID);\\n\\taddNonEnumerableProperty(\\'__set__\\', UNIVERSAL_SETTER_ID);\\n\\taddNonEnumerableProperty(\\'__reset__\\', UNIVERSAL_RESETTER_ID);\\n\\taddNonEnumerableProperty(\\'__ResetDependency__\\', UNIVERSAL_RESETTER_ID);\\n\\taddNonEnumerableProperty(\\'__with__\\', UNIVERSAL_WITH_ID);\\n\\taddNonEnumerableProperty(\\'__RewireAPI__\\', API_OBJECT_ID);\\n}\\n');\n\nvar filterWildcardImportTemplate = exports.filterWildcardImportTemplate = (0, _babelTemplate2.default)('\\nfunction FILTER_WILDCARD_IMPORT_IDENTIFIER(wildcardImport={}) {\\n\\tlet validPropertyNames = Object.keys(wildcardImport).filter(function(propertyName) {\\n\\t\\treturn  propertyName !== \\'__get__\\' &&\\n\\t\\t\\t\\tpropertyName !== \\'__set__\\' &&\\n\\t\\t\\t\\tpropertyName !== \\'__reset__\\' &&\\n\\t\\t\\t\\tpropertyName !== \\'__with__\\' &&\\n\\n\\t\\t\\t\\tpropertyName !== \\'__GetDependency__\\' &&\\n\\t\\t\\t\\tpropertyName !== \\'__Rewire__\\' &&\\n\\t\\t\\t\\tpropertyName !== \\'__ResetDependency__\\' &&\\n\\n\\t\\t\\t\\tpropertyName !== \\'__RewireAPI__\\';\\n\\t});\\n\\n\\treturn validPropertyNames.reduce(\\n\\t\\tfunction(filteredWildcardImport, propertyName) {\\n\\t\\t\\tfilteredWildcardImport[propertyName] = wildcardImport[propertyName];\\n\\t\\t\\treturn filteredWildcardImport;\\n\\t\\t}, {}\\n\\t);\\n}\\n');","/home/travis/build/npmtest/node-npmtest-babel-plugin-rewire/node_modules/babel-plugin-rewire/lib/RewireHelpers.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.wasProcessed = wasProcessed;\nexports.noRewire = noRewire;\nexports.contains = contains;\n/*Copyright (c) 2015, Robert Binna <r.binna@synedra.com>\n\n Permission to use, copy, modify, and/or distribute this software for any\n purpose with or without fee is hereby granted, provided that the above\n copyright notice and this permission notice appear in all copies.\n\n THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\n ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\n OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.*/\n\nfunction wasProcessed(path) {\n  return path.node.__noRewire === true;\n}\n\nfunction noRewire(identifier) {\n  identifier.__noRewire = true;\n  return identifier;\n}\n\nfunction contains(array, needle) {\n  var contains = false;\n  for (var i = 0; i < array.length; ++i) {\n    contains = contains || array[i] == needle;\n  }\n  return contains;\n}"}